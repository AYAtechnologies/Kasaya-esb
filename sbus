#!/usr/bin/env python
#coding: utf-8
from __future__ import unicode_literals, print_function
from servicebus.client import control
from servicebus.conf import load_config_from_file
import plac
from pprint import pprint


class Jobs(object):
    commands = ['list']

    def __init__(self):
        load_config_from_file("config.txt")

    @plac.annotations(
        u=("Show UUID identifiers", "flag")
    )
    def list(self, u=False):
        hostline   = "  {service: >{ws}}  {addr: <{wa}} (hostname: {hostname})"
        workerline = "  {service: >{ws}}  on port: {port}"
        if u:
            hostline   += "   uuid:{uuid}"
            workerline += "   uuid:{uuid}"

        # all hosts in network
        hosts = control.host.list()

        # maximum length of names
        whst, wadr, wsvc = 5,0,0
        for h in hosts:
            whst = max(whst, len(h['hostname']) )
            wadr = max(wadr, len(h['addr']) )
            for s in h['services']:
                wsvc = max(wsvc, len(s['service']) )

        # report
        hcnt, wcnt = 0,0
        for h in hosts:
            hcnt += 1
            print ( hostline.format(wh=whst, wa=wadr, ws=wsvc, service="SYNCD", **h) )

            for w in h['services']:
                wcnt += 1
                print ( workerline.format(ws=wsvc, **w) )
            print ()
        print ("Total number of hosts: {0}, workers: {1}".format(hcnt, wcnt) )


    #def kill(self):
    #    pass

if __name__=="__main__":
    plac.call( Jobs() )
